# Generated by Django 2.2.2 on 2022-09-24 07:02

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BookCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cat_name_bangla', models.CharField(max_length=150)),
                ('cat_name_english', models.CharField(blank=True, max_length=150)),
                ('detail', models.TextField(blank=True)),
                ('Is_homepage', models.BooleanField(default=False)),
                ('Is_mainmenu', models.BooleanField(default=False)),
                ('Is_top_category', models.BooleanField(default=False)),
                ('menu_url', models.CharField(blank=True, max_length=450)),
                ('category_cover', models.ImageField(blank=True, upload_to='images/category_cover')),
                ('ordering', models.IntegerField(default=1000)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Book Category',
                'verbose_name_plural': 'Add Book Category',
                'db_table': 'book_category_list',
            },
        ),
        migrations.CreateModel(
            name='BookList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_name_bangla', models.CharField(max_length=250, null=True)),
                ('book_name_english', models.CharField(blank=True, max_length=250, null=True)),
                ('slug', models.CharField(blank=True, max_length=250, null=True)),
                ('book_image', models.CharField(blank=True, max_length=300, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('number_of_page', models.CharField(blank=True, max_length=50, null=True)),
                ('cover_type', models.CharField(choices=[('1', 'পেপারব্যাক'), ('2', 'হার্ডকভার'), ('3', 'NANE')], default=1, max_length=10)),
                ('ISBN', models.CharField(blank=True, max_length=80, null=True)),
                ('edition', models.CharField(blank=True, max_length=50, null=True)),
                ('language', models.CharField(blank=True, max_length=100, null=True)),
                ('unit_price', models.IntegerField(default=0)),
                ('purchase_discount', models.CharField(blank=True, max_length=15, null=True)),
                ('book_price', models.CharField(blank=True, max_length=15, null=True)),
                ('sale_price', models.CharField(blank=True, max_length=15, null=True)),
                ('coupon_price', models.IntegerField(blank=True, default=0, null=True)),
                ('discount', models.CharField(default=0, max_length=15)),
                ('total_sale', models.IntegerField(default=0)),
                ('quantity', models.IntegerField(default=0)),
                ('weight', models.CharField(default=0, max_length=15, null=True)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('external_link', models.CharField(blank=True, max_length=600, null=True)),
                ('pre_order_msg', models.CharField(blank=True, max_length=200, null=True)),
                ('book_idendity', models.CharField(default=0, max_length=15)),
                ('stock_info', models.CharField(choices=[('1', 'In Publisher'), ('2', 'In Stock'), ('3', 'Out of Stock'), ('4', 'Pre Order')], max_length=10)),
                ('add_date', models.DateField(auto_now_add=True)),
                ('sales_date', models.DateField()),
                ('detail', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('video_link', models.TextField(blank=True, null=True)),
                ('is_pre_image', models.BooleanField(default=0)),
                ('is_package', models.BooleanField(default=0)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': 'All Book',
                'verbose_name_plural': 'Books List',
                'db_table': 'book_list',
            },
        ),
        migrations.CreateModel(
            name='BookWritter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('writter_name_bangla', models.CharField(max_length=150)),
                ('writter_name_english', models.CharField(blank=True, max_length=150)),
                ('menu_url', models.CharField(blank=True, max_length=450)),
                ('email', models.EmailField(blank=True, max_length=150)),
                ('mobile', models.CharField(blank=True, max_length=15)),
                ('qualification', models.CharField(blank=True, max_length=15)),
                ('designation', models.CharField(blank=True, max_length=15)),
                ('specialist', models.CharField(blank=True, max_length=15)),
                ('date_of_birth', models.CharField(blank=True, max_length=15)),
                ('address', models.TextField(blank=True)),
                ('personal_details', ckeditor.fields.RichTextField(blank=True)),
                ('writter_images', models.CharField(blank=True, max_length=450)),
                ('is_writer', models.BooleanField(default=1)),
                ('is_translator', models.BooleanField(default=0)),
                ('is_editor', models.BooleanField(default=0)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': 'Book Writter',
                'verbose_name_plural': 'Book Writter Entry',
                'db_table': 'book_writter_list',
            },
        ),
        migrations.CreateModel(
            name='CourierService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courier_name', models.CharField(blank=True, max_length=60, null=True)),
                ('courier_address', models.TextField(blank=True, null=True)),
                ('ordering', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'courier_service_list',
            },
        ),
        migrations.CreateModel(
            name='CustomarAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=30)),
                ('mobile', models.CharField(max_length=15)),
                ('optional_mobile', models.CharField(blank=True, max_length=15)),
                ('email', models.CharField(blank=True, max_length=170, null=True)),
                ('user_name', models.CharField(blank=True, max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('login_otp', models.IntegerField(blank=True, null=True)),
                ('reg_date', models.DateTimeField(auto_now_add=True)),
                ('address', models.TextField(blank=True)),
                ('profile_images', models.ImageField(blank=True, upload_to='images/customer_images')),
                ('is_guest', models.BooleanField(default=1)),
                ('customer_level', models.CharField(blank=True, max_length=55, null=True)),
                ('total_point', models.DecimalField(decimal_places=6, default=0, max_digits=30)),
                ('used_point', models.DecimalField(decimal_places=6, default=0, max_digits=30)),
                ('available_point', models.DecimalField(decimal_places=6, default=0, max_digits=30)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'customer_list',
            },
        ),
        migrations.CreateModel(
            name='DistrictEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district_name_bangla', models.CharField(max_length=230)),
                ('district_name_english', models.CharField(max_length=230)),
                ('ordering', models.IntegerField(default=0)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'district_list',
            },
        ),
        migrations.CreateModel(
            name='MastarCategorySetup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cat_name_bangla', models.CharField(max_length=150)),
                ('cat_name_english', models.CharField(blank=True, max_length=150)),
                ('detail', models.TextField(blank=True)),
                ('Is_homepage', models.BooleanField(default=False)),
                ('Is_mainmenu', models.BooleanField(default=False)),
                ('Is_book', models.BooleanField(default=False)),
                ('Is_top_category', models.BooleanField(default=False)),
                ('menu_url', models.CharField(blank=True, max_length=450)),
                ('category_cover', models.ImageField(blank=True, upload_to='images/category_cover')),
                ('ordering', models.IntegerField(default=1000)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'master_category',
            },
        ),
        migrations.CreateModel(
            name='MastarSubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_category_bangla', models.CharField(blank=True, max_length=60, null=True)),
                ('sub_category_english', models.CharField(blank=True, max_length=60, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('menu_url', models.CharField(blank=True, max_length=450)),
                ('Is_homepage', models.BooleanField(default=False)),
                ('Is_mainmenu', models.BooleanField(default=False)),
                ('ordering', models.IntegerField(default=1000)),
                ('status', models.BooleanField(default=True)),
                ('master_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.MastarCategorySetup')),
                ('regular_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.BookCategory')),
            ],
            options={
                'db_table': 'master_sub_category',
            },
        ),
        migrations.CreateModel(
            name='MenuList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_name', models.CharField(max_length=50)),
                ('menu_url', models.CharField(max_length=90)),
                ('module_name', models.CharField(choices=[('HR', 'HR'), ('Attendance', 'Attendance'), ('Leave', 'Leave'), ('Payroll', 'Payroll'), ('Ecommerce', 'Ecommerce')], max_length=50)),
                ('module_order', models.IntegerField(default=0)),
                ('menu_order', models.IntegerField(default=0)),
                ('menu_icon', models.CharField(blank=True, max_length=50)),
                ('background_color', models.CharField(blank=True, max_length=30)),
                ('font_color', models.CharField(blank=True, max_length=30)),
                ('is_dashboard', models.BooleanField(default=False)),
                ('modified_by', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Menu',
                'verbose_name_plural': 'Menu List',
                'db_table': 'menu_list',
            },
        ),
        migrations.CreateModel(
            name='PostOfficeInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_office_bangla', models.CharField(max_length=230)),
                ('post_office_english', models.CharField(max_length=230)),
                ('post_code', models.CharField(max_length=230)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'db_table': 'post_office_list',
            },
        ),
        migrations.CreateModel(
            name='PreviewImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_name_id', models.IntegerField(default=0)),
                ('ISBN', models.CharField(max_length=30)),
                ('images', models.FileField(blank=True, upload_to='images/preview_images')),
            ],
            options={
                'db_table': 'preview_images',
            },
        ),
        migrations.CreateModel(
            name='ProductBrand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_name', models.CharField(blank=True, max_length=60, null=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('ordering', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'product_brand_list',
            },
        ),
        migrations.CreateModel(
            name='ProductSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size_name', models.CharField(blank=True, max_length=60, null=True)),
                ('ordering', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'product_size_list',
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publisher_name_bangla', models.CharField(max_length=150)),
                ('publisher_name_english', models.CharField(blank=True, max_length=150)),
                ('menu_url', models.CharField(blank=True, max_length=450)),
                ('authorize_person', models.CharField(blank=True, max_length=150)),
                ('email', models.EmailField(blank=True, max_length=150)),
                ('publisher_code', models.CharField(blank=True, max_length=150)),
                ('password', models.CharField(blank=True, max_length=150)),
                ('mobile', models.CharField(blank=True, max_length=15)),
                ('mobile_optional', models.CharField(blank=True, max_length=15)),
                ('publisher_address', models.TextField(blank=True)),
                ('discount_persent', models.IntegerField(default=0)),
                ('sales_discount', models.IntegerField(default=0)),
                ('publisher_logo', models.ImageField(blank=True, upload_to='images/publisher_logo')),
                ('publisher_cover', models.ImageField(blank=True, upload_to='images/publisher_logo')),
                ('web_address', models.CharField(blank=True, max_length=150)),
                ('facebook_link', models.TextField(blank=True)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': 'Book Publisher',
                'verbose_name_plural': 'Publisher Entry',
                'db_table': 'book_publisher_list',
            },
        ),
        migrations.CreateModel(
            name='PublisherProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publisher_name', models.CharField(blank=True, max_length=100)),
                ('slugan', models.CharField(blank=True, max_length=100)),
                ('page_title', models.CharField(blank=True, max_length=100)),
                ('email1', models.EmailField(blank=True, max_length=100)),
                ('email2', models.EmailField(blank=True, max_length=100)),
                ('mobile1', models.CharField(blank=True, max_length=15)),
                ('mobile2', models.CharField(blank=True, max_length=15)),
                ('address', models.TextField(blank=True)),
                ('pro_details', models.TextField(blank=True)),
                ('logo', models.ImageField(upload_to='images/logo')),
                ('favicon_logo', models.ImageField(upload_to='images/logo')),
                ('about_content', models.TextField(blank=True)),
                ('about_images', models.ImageField(upload_to='images/about_images')),
                ('why_buy', models.TextField(blank=True)),
                ('map_locationo', models.TextField(blank=True)),
                ('facebook_link', models.TextField(blank=True)),
                ('instagram_link', models.TextField(blank=True)),
                ('youtube_link', models.TextField(blank=True)),
                ('linkedin_link', models.TextField(blank=True)),
                ('staring_year', models.IntegerField()),
                ('copy_right', models.CharField(blank=True, max_length=50)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Publisher Profile',
                'verbose_name_plural': 'Publisher Profile Information',
                'db_table': 'shop_profile',
            },
        ),
        migrations.CreateModel(
            name='SalesOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.IntegerField(default=0)),
                ('delivery_per_name', models.CharField(max_length=180)),
                ('customer_mobile', models.CharField(max_length=15)),
                ('optional_number', models.CharField(blank=True, max_length=15)),
                ('customer_email', models.EmailField(blank=True, max_length=150)),
                ('shipping_address', models.CharField(max_length=20000)),
                ('total_amount', models.IntegerField(default=0)),
                ('vat_amount', models.IntegerField(default=0)),
                ('discount_amount', models.IntegerField(default=0)),
                ('less_amount', models.IntegerField(default=0)),
                ('due_amount', models.IntegerField(default=0)),
                ('shipping_charge', models.IntegerField(default=0)),
                ('service_charge', models.IntegerField(default=0)),
                ('service_code', models.IntegerField(default=0)),
                ('grand_total', models.IntegerField(default=0)),
                ('payment_method', models.CharField(choices=[('1', 'COD'), ('2', 'Bkash'), ('3', 'Rocket'), ('4', 'Nagad'), ('5', 'AamarPay')], default=1, max_length=1)),
                ('payment_status', models.CharField(choices=[('1', 'Pending'), ('2', 'Unpaid'), ('3', 'Paid'), ('4', 'Refund')], default=1, max_length=1)),
                ('order_status', models.CharField(choices=[('1', 'Pending'), ('2', 'Confirmed'), ('3', 'Packed'), ('4', 'Shipping'), ('5', 'Delivered'), ('6', 'Returned'), ('7', 'Canceled'), ('8', 'Hold')], default=1, max_length=1)),
                ('session_key', models.CharField(max_length=230)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(null=True)),
                ('order_remarks', models.TextField(blank=True, null=True)),
                ('status', models.BooleanField(default=1)),
                ('customer_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.CustomarAccount')),
                ('delivery_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.CourierService')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.DistrictEntry')),
                ('postal_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.PostOfficeInfo')),
            ],
            options={
                'verbose_name': 'Sales Order',
                'verbose_name_plural': 'Sales Orders',
                'db_table': 'sales_order',
            },
        ),
        migrations.CreateModel(
            name='SliderInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slider_name', models.CharField(blank=True, max_length=100)),
                ('title1', models.CharField(blank=True, max_length=200)),
                ('title2', models.CharField(blank=True, max_length=200)),
                ('slider_images', models.ImageField(upload_to='images/slider')),
                ('slider_link', models.TextField(blank=True)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('slider_order', models.IntegerField()),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Slider Image',
                'verbose_name_plural': 'Slider Images',
                'db_table': 'slider_list',
            },
        ),
        migrations.CreateModel(
            name='UserRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=65)),
                ('last_name', models.CharField(blank=True, max_length=65)),
                ('full_name', models.CharField(blank=True, max_length=130)),
                ('email', models.CharField(blank=True, max_length=130)),
                ('mobile', models.CharField(blank=True, max_length=50)),
                ('mobile2', models.CharField(blank=True, max_length=50)),
                ('designation', models.CharField(blank=True, max_length=60)),
                ('photo', models.FileField(blank=True, upload_to='images/user_progile')),
                ('user_type', models.CharField(choices=[('1', 'Admin Dashboard'), ('2', 'Collector Dashboard'), ('3', 'Delivery Dashboard')], max_length=2)),
                ('username', models.CharField(max_length=65)),
                ('password', models.CharField(max_length=65)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'User Registration',
                'verbose_name_plural': 'User Registration List',
                'db_table': 'user_list',
            },
        ),
        migrations.CreateModel(
            name='WritterWiseBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True)),
                ('book_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.BookList')),
                ('writter_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.BookWritter')),
            ],
            options={
                'verbose_name': 'Writter Wise Book',
                'verbose_name_plural': 'Writter Wise Books',
                'db_table': 'writter_wise_book',
            },
        ),
        migrations.CreateModel(
            name='UserAccessControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_action', models.BooleanField(default=0)),
                ('insert_action', models.BooleanField(default=0)),
                ('update_action', models.BooleanField(default=0)),
                ('delete_action', models.BooleanField(default=0)),
                ('permission_date', models.DateTimeField(auto_now_add=True)),
                ('permitted_by', models.BigIntegerField(default=0)),
                ('insert_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('insert_by', models.IntegerField(default=0)),
                ('update_by', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=True)),
                ('menu', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.MenuList')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.UserRegistration')),
            ],
            options={
                'verbose_name': 'Access Control',
                'verbose_name_plural': 'User Access Control',
                'db_table': 'user_access_control',
            },
        ),
        migrations.CreateModel(
            name='UpozillaEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upozilla_name_bangla', models.CharField(max_length=230)),
                ('upozilla_name_english', models.CharField(max_length=230)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=1)),
                ('district_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.DistrictEntry')),
            ],
            options={
                'db_table': 'upozilla_list',
            },
        ),
        migrations.CreateModel(
            name='TranslatorWiseBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True)),
                ('book_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.BookList')),
                ('translator_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.BookWritter')),
            ],
            options={
                'verbose_name': 'Translator Wise Book',
                'verbose_name_plural': 'Translator Wise Books',
                'db_table': 'translator_wise_book',
            },
        ),
        migrations.CreateModel(
            name='SubCategoryWiseBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True)),
                ('book_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.BookList')),
                ('subcategory_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.MastarSubCategory')),
            ],
            options={
                'verbose_name': 'Sub Category Wise Book',
                'verbose_name_plural': 'Sub Category Wise Books',
                'db_table': 'sub_category_wise_book',
            },
        ),
        migrations.CreateModel(
            name='SalesOrderPaymentDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.IntegerField(default=0)),
                ('payment_method', models.CharField(choices=[('1', 'COD'), ('2', 'Bkash'), ('3', 'Rocket'), ('4', 'Nagad'), ('5', 'AamarPay')], default=1, max_length=1)),
                ('payment_status', models.CharField(choices=[('1', 'Partial'), ('2', 'Full'), ('3', 'Due'), ('4', 'Free')], default=1, max_length=1)),
                ('account_number', models.IntegerField(default=0)),
                ('payment_amount', models.IntegerField(default=0)),
                ('txt_number', models.CharField(blank=True, max_length=50, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('sales_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.SalesOrder')),
            ],
            options={
                'verbose_name': 'Sales Order Payment Detail',
                'verbose_name_plural': 'Sales Order Payment Details',
                'db_table': 'sales_order_payment_details',
            },
        ),
        migrations.AddField(
            model_name='salesorder',
            name='upozilla',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.UpozillaEntry'),
        ),
        migrations.CreateModel(
            name='SalesDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.IntegerField(default=0)),
                ('book_price', models.IntegerField(default=0)),
                ('sale_price', models.IntegerField(default=0)),
                ('book_quantity', models.IntegerField(default=1)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('is_guest', models.IntegerField(default=1)),
                ('session_key', models.CharField(blank=True, max_length=230, null=True)),
                ('remarks', models.TextField(blank=True)),
                ('status', models.BooleanField(default=1)),
                ('book_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.BookList')),
            ],
            options={
                'verbose_name': 'Sales Detail',
                'verbose_name_plural': 'Sales Details',
                'db_table': 'sales_details',
            },
        ),
        migrations.CreateModel(
            name='ProductOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_title', models.CharField(max_length=230)),
                ('link', models.TextField(blank=True)),
                ('offer_details', models.TextField(blank=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=False)),
                ('insert_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.CustomarAccount')),
            ],
            options={
                'verbose_name': 'Product Offer',
                'verbose_name_plural': 'Product Offer List',
                'db_table': 'product_offers',
            },
        ),
        migrations.CreateModel(
            name='ProductList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.CharField(choices=[('1', 'Book'), ('2', 'Other')], default=1, max_length=1)),
                ('product_name_bangla', models.CharField(blank=True, max_length=256, null=True)),
                ('product_name_english', models.CharField(blank=True, max_length=256, null=True)),
                ('product_origin', models.CharField(blank=True, max_length=160, null=True)),
                ('mrp_price', models.FloatField(default=0)),
                ('qty', models.FloatField(default=0)),
                ('discount', models.FloatField(default=0)),
                ('sale_price', models.FloatField(default=0)),
                ('cover_type', models.CharField(choices=[('1', 'পেপারব্যাক'), ('2', 'হার্ডকভার'), ('3', 'NANE')], default=1, max_length=10)),
                ('stock_info', models.CharField(blank=True, max_length=56, null=True)),
                ('product_image', models.CharField(blank=True, max_length=256, null=True)),
                ('details', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('video_link', models.TextField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=56, null=True)),
                ('number_of_page', models.CharField(blank=True, max_length=56, null=True)),
                ('country', models.CharField(blank=True, max_length=56, null=True)),
                ('ISBN', models.CharField(blank=True, max_length=56, null=True)),
                ('is_preview_img', models.CharField(blank=True, max_length=56, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('book_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.BookList')),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.Publisher')),
            ],
            options={
                'verbose_name': 'Product List',
                'db_table': 'product_list',
            },
        ),
        migrations.CreateModel(
            name='PreviewPdfFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf_file', models.CharField(blank=True, max_length=260, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('book_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.BookList')),
            ],
            options={
                'db_table': 'preview_pdf_file',
            },
        ),
        migrations.AddField(
            model_name='postofficeinfo',
            name='upozilla_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.UpozillaEntry'),
        ),
        migrations.CreateModel(
            name='PackageList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bangla_name', models.CharField(max_length=230)),
                ('english_name', models.CharField(max_length=230)),
                ('unit_price', models.IntegerField(default=0)),
                ('sale_price', models.IntegerField(default=0)),
                ('discount_percent', models.IntegerField(default=0)),
                ('package_image', models.CharField(blank=True, max_length=300, null=True)),
                ('cover_type', models.CharField(choices=[('1', 'পেপারব্যাক'), ('2', 'হার্ডকভার')], default=1, max_length=10)),
                ('details', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('video_link', models.TextField(blank=True, null=True)),
                ('total_sale', models.IntegerField(default=0)),
                ('is_book_package', models.BooleanField(default=0)),
                ('status', models.BooleanField(default=1)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.BookList')),
            ],
            options={
                'db_table': 'package_list',
            },
        ),
        migrations.AddField(
            model_name='menulist',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.UserRegistration'),
        ),
        migrations.CreateModel(
            name='GatewayePayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_id', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_type', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.IntegerField(default=0)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('order_number', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=1)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.CustomarAccount')),
            ],
            options={
                'db_table': 'gatewaye_payment_list',
            },
        ),
        migrations.CreateModel(
            name='EditorWiseBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True)),
                ('book_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.BookList')),
                ('editor_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.BookWritter')),
            ],
            options={
                'verbose_name': 'Editor Wise Book',
                'verbose_name_plural': 'Editor Wise Books',
                'db_table': 'editor_wise_book',
            },
        ),
        migrations.CreateModel(
            name='ClientReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True)),
                ('rating_count', models.IntegerField(default=0)),
                ('total_like', models.IntegerField(default=0)),
                ('total_dislike', models.IntegerField(default=0)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('book_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.BookList')),
                ('client_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.CustomarAccount')),
            ],
            options={
                'verbose_name': 'Client Review',
                'verbose_name_plural': 'Client Review list',
                'db_table': 'client_review_list',
            },
        ),
        migrations.CreateModel(
            name='CategoryWiseBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True)),
                ('book_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.BookList')),
                ('category_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.BookCategory')),
            ],
            options={
                'verbose_name': 'Category Wise Book',
                'verbose_name_plural': 'Category Wise Books',
                'db_table': 'category_wise_book',
            },
        ),
        migrations.AddField(
            model_name='booklist',
            name='master_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.MastarCategorySetup'),
        ),
        migrations.AddField(
            model_name='booklist',
            name='publisher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.Publisher'),
        ),
        migrations.AddField(
            model_name='bookcategory',
            name='master_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.MastarCategorySetup'),
        ),
        migrations.CreateModel(
            name='BlogMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blog_title', models.CharField(blank=True, max_length=256, null=True)),
                ('blog_title_english', models.CharField(blank=True, max_length=256, null=True)),
                ('blog_url', models.CharField(blank=True, max_length=256, null=True)),
                ('blog_image', models.ImageField(blank=True, null=True, upload_to='images/blog_image')),
                ('blog_details', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('meta_keyword', models.TextField(blank=True, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('total_like', models.IntegerField(default=0)),
                ('total_view', models.IntegerField(default=0)),
                ('total_comments', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.BookCategory')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.UserRegistration')),
            ],
            options={
                'verbose_name': 'Blog List',
                'verbose_name_plural': 'Blog Lists',
                'db_table': 'blog_list',
            },
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(blank=True, max_length=60, null=True)),
                ('user_mobile', models.CharField(blank=True, max_length=60, null=True)),
                ('user_email', models.EmailField(blank=True, max_length=60, null=True)),
                ('user_comments', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('blog', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.BlogMaster')),
            ],
            options={
                'verbose_name': 'Blog Comment',
                'verbose_name_plural': 'Blog Comment List',
                'db_table': 'blog_wise_comments',
            },
        ),
        migrations.CreateModel(
            name='AddToWishlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qt_price', models.IntegerField(default=0)),
                ('book_price', models.IntegerField(default=0)),
                ('total_price', models.IntegerField(default=0)),
                ('discount', models.IntegerField(default=0)),
                ('quantity', models.IntegerField(default=1)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('session_key', models.CharField(max_length=230)),
                ('book_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.BookList')),
            ],
            options={
                'verbose_name': 'AddTo Wishlist',
                'verbose_name_plural': 'Add Wish List',
                'db_table': 'add_to_wishlist',
            },
        ),
        migrations.CreateModel(
            name='AddToCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qt_price', models.IntegerField(default=0)),
                ('book_price', models.IntegerField(default=0)),
                ('total_price', models.IntegerField(default=0)),
                ('discount', models.IntegerField(default=0)),
                ('quantity', models.IntegerField(default=1)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('session_key', models.CharField(max_length=230)),
                ('book_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publisher_app.BookList')),
            ],
            options={
                'verbose_name': 'AddTo Cart',
                'verbose_name_plural': 'AddToCart List',
                'db_table': 'add_to_cart',
            },
        ),
    ]
